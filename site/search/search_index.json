{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Lilith Notes Made By LilithsDemon(Lucy Gardener) Lilith Notes is a website that is going to be a source of different resources from note takings to a blog. Link to my website for other resources:","title":"Home"},{"location":"#welcome-to-lilith-notes","text":"Made By LilithsDemon(Lucy Gardener) Lilith Notes is a website that is going to be a source of different resources from note takings to a blog. Link to my website for other resources:","title":"Welcome to Lilith Notes"},{"location":"Year1/Database%20design/Data/","text":"Data integrity Data integrity refers to the accuracy, consistency and completeness of the data. Safety of data in terms of compliance with the law (e.g. GDPR) Data integrity is important to ensure your database is efficient, preventing redundant and inaccurate data, and stopping it from being lost. Ensuring data integrity is vital to a business, as loss of data can cause huge fines from GDPR and reputational risks (i.e. customers won't use your bank if you cannot keep your data secure) Entity integrity This ensures rows are not using repeated data, and that the primary keys ensures each row is individually accessible. (Can use data types/lengths for this) This ensures that each entity is also individually accessible Referential integrity Ensures that the values between relationships are accurate (i.e. PK and FK match up), using methods like CASCADE Domain integrity Ensures that each column of the entity is valid, and does not contain any duplicates or any unnecessary data. user-defined integrity Ensuring that users do not implement invalid and incorrect data This is usually done through validation and sanitation on a website or program. Data validation Data validation prevents invalid or incorrect data from being inputted to the database. This can be done through setting data types and limiting the length of the inputted value, (i.e. for a phone number, you could set it to int only and limit it to 11 digits) There's a reason most data validation is performed outside of the database - it's very hard to set up strict rules. However, you can at least limit the ridiculousness of some of the inputs (i.e. letters for the age, or limiting the postcode to only 7 characters) You can also use ENUM to restrict the accepted values to only values that you allow, which is used for fields like Acess Level. Data security and Data control Data contains information on the user, some of which may be sensitive and requires protection. Examples of this might include: - Age - Name - Email - Sexual orientation - Religious beliefs Data security techniques Encryption Restricting employee access Authentication Keeping the database up to date Database proxy Encryption When using Encryption you should use Salts and strong, relevant encyption techniques like SHA256 over MD5 Salts are automatically generated character sets which make the passwords more secure, due to helping to hide the true password","title":"Data integrity"},{"location":"Year1/Database%20design/Data/#data-integrity","text":"Data integrity refers to the accuracy, consistency and completeness of the data. Safety of data in terms of compliance with the law (e.g. GDPR) Data integrity is important to ensure your database is efficient, preventing redundant and inaccurate data, and stopping it from being lost. Ensuring data integrity is vital to a business, as loss of data can cause huge fines from GDPR and reputational risks (i.e. customers won't use your bank if you cannot keep your data secure)","title":"Data integrity"},{"location":"Year1/Database%20design/Data/#entity-integrity","text":"This ensures rows are not using repeated data, and that the primary keys ensures each row is individually accessible. (Can use data types/lengths for this) This ensures that each entity is also individually accessible","title":"Entity integrity"},{"location":"Year1/Database%20design/Data/#referential-integrity","text":"Ensures that the values between relationships are accurate (i.e. PK and FK match up), using methods like CASCADE","title":"Referential integrity"},{"location":"Year1/Database%20design/Data/#domain-integrity","text":"Ensures that each column of the entity is valid, and does not contain any duplicates or any unnecessary data.","title":"Domain integrity"},{"location":"Year1/Database%20design/Data/#user-defined-integrity","text":"Ensuring that users do not implement invalid and incorrect data This is usually done through validation and sanitation on a website or program.","title":"user-defined integrity"},{"location":"Year1/Database%20design/Data/#data-validation","text":"Data validation prevents invalid or incorrect data from being inputted to the database. This can be done through setting data types and limiting the length of the inputted value, (i.e. for a phone number, you could set it to int only and limit it to 11 digits) There's a reason most data validation is performed outside of the database - it's very hard to set up strict rules. However, you can at least limit the ridiculousness of some of the inputs (i.e. letters for the age, or limiting the postcode to only 7 characters) You can also use ENUM to restrict the accepted values to only values that you allow, which is used for fields like Acess Level.","title":"Data validation"},{"location":"Year1/Database%20design/Data/#data-security-and-data-control","text":"Data contains information on the user, some of which may be sensitive and requires protection. Examples of this might include: - Age - Name - Email - Sexual orientation - Religious beliefs","title":"Data security and Data control"},{"location":"Year1/Database%20design/Data/#data-security-techniques","text":"Encryption Restricting employee access Authentication Keeping the database up to date Database proxy","title":"Data security techniques"},{"location":"Year1/Database%20design/Data/#encryption","text":"When using Encryption you should use Salts and strong, relevant encyption techniques like SHA256 over MD5 Salts are automatically generated character sets which make the passwords more secure, due to helping to hide the true password","title":"Encryption"},{"location":"Year1/Database%20design/Normal%20Form/","text":"Normal Form 1st Normal Form Add in any missing data ( if possible ) Identify/Create a primary key ( primary keys must be unique ) It might be possible to make a composite key for 1NF or 2NF A composite key is made up of multiple table information ( does not always work ) Composite keys should only be used temporarily Remove duplicate information rows if they are the same Seperate atomic attributes Atomic attributes are attributes that can be futher split up E.G. a full name can be split into a first and second name For example we will use this table as an example: Employee Name Salary Job Title Project Project Start Date Project End Date Manager Sam Smith 26000 Rookie Bravo 01/02/2022 01/02/2023 Lt Alex Jones Mick Mann 33000 Charlie 02/01/2021 02/01/2024 Lt Alex Jones 33000 Corporal 02/01/2024 Adam Artic 40000 Sergeant Alpha 03/04/2016 04/03/2029 Cl Jess Hawke Sam Smith Rookie 01/02/2022 As you can tell by this table there is a lot of duplicate and missing data in the table, our first thing to do would be to ensure any missing data is filled. In this case some data can be moved across to different rows before deleting duplicate rows to ensure that all the data is correct. For example from row 2 we know that Mick Mann has a salary of 33000 and then by comparing with row 4 he is a corporal as data is the same in each. We can then get rid of duplicate rows such as the third row and we can see the 5th row is the same as the first row. Therefore this is what our table would look like in 1NF: Composite key First Name Last Name Salary Job Title Project Project Start Date Project End Date Manager Rookie Sam Smith Sam Smith 26000 Rookie Bravo 01/02/2022 01/02/2023 Lt Alex Jones Corporal Mick Mann Mick Mann 33000 Corporal Charlie 02/01/2021 02/01/2024 Lt Alex Jones Sergeant Adam Artic Adam Artic 40000 Sergeant Alpha 03/04/2016 04/03/2029 Cl Jess Hawke 2nd Normal Form First Check that data is in 1NF Remove any partial dependancies A partial dependancy is where one or more of the attributes depends on part of the primary key This can occur if the primary key is a composite key Fix any many-to-many relationships A database cannot have many to many relationships If there is a many to many realtionship it shoud be changed to a one-to-many then a many-to-one table So for out 2nd Normal form we would split this into multiple different tables that all link with each other Employee ID First Name Last Name Job Title Project 1 Sam Smith Rookie Bravo 2 Mick Mann Corporal Charlie 3 Adam Artic Sergeant Alpha Job Title Salary Rookie 26000 Corporal 33000 Sergeant 40000 Project Project Start Date Project End Date Manager Alpha 03/04/2016 04/03/2029 Cl Jess Hawke Bravo 01/02/2022 01/02/2023 Lt Alex Jones Charlie 02/01/2021 02/01/2024 Lt Alex Jones This is now second normal form as there is now not a composite key and there is not a many to many realtionship 3rd Normal Form First check that data is already in 2NF Check there are no \"key dependancies\" A non-key dependancy exists where the value of an attribute is determined by a factor that is not part of a key In this example we can tell that the manager is not fully dependant on the Project and can be different therefore Manager can be a table Employee ID First Name Last Name Job Title Project 1 Sam Smith Rookie Bravo 2 Mick Mann Corporal Charlie 3 Adam Artic Sergeant Alpha Job Title Salary Rookie 26000 Corporal 33000 Sergeant 40000 Project Project Start Date Project End Date Manager Alpha 03/04/2016 04/03/2029 2 Bravo 01/02/2022 01/02/2023 1 Charlie 02/01/2021 02/01/2024 1 Manager ID Manager 1 Lt Alex Jones 2 Cl Jess Hawke","title":"Normal Form"},{"location":"Year1/Database%20design/Normal%20Form/#normal-form","text":"","title":"Normal Form"},{"location":"Year1/Database%20design/Normal%20Form/#1st-normal-form","text":"Add in any missing data ( if possible ) Identify/Create a primary key ( primary keys must be unique ) It might be possible to make a composite key for 1NF or 2NF A composite key is made up of multiple table information ( does not always work ) Composite keys should only be used temporarily Remove duplicate information rows if they are the same Seperate atomic attributes Atomic attributes are attributes that can be futher split up E.G. a full name can be split into a first and second name For example we will use this table as an example: Employee Name Salary Job Title Project Project Start Date Project End Date Manager Sam Smith 26000 Rookie Bravo 01/02/2022 01/02/2023 Lt Alex Jones Mick Mann 33000 Charlie 02/01/2021 02/01/2024 Lt Alex Jones 33000 Corporal 02/01/2024 Adam Artic 40000 Sergeant Alpha 03/04/2016 04/03/2029 Cl Jess Hawke Sam Smith Rookie 01/02/2022 As you can tell by this table there is a lot of duplicate and missing data in the table, our first thing to do would be to ensure any missing data is filled. In this case some data can be moved across to different rows before deleting duplicate rows to ensure that all the data is correct. For example from row 2 we know that Mick Mann has a salary of 33000 and then by comparing with row 4 he is a corporal as data is the same in each. We can then get rid of duplicate rows such as the third row and we can see the 5th row is the same as the first row. Therefore this is what our table would look like in 1NF: Composite key First Name Last Name Salary Job Title Project Project Start Date Project End Date Manager Rookie Sam Smith Sam Smith 26000 Rookie Bravo 01/02/2022 01/02/2023 Lt Alex Jones Corporal Mick Mann Mick Mann 33000 Corporal Charlie 02/01/2021 02/01/2024 Lt Alex Jones Sergeant Adam Artic Adam Artic 40000 Sergeant Alpha 03/04/2016 04/03/2029 Cl Jess Hawke","title":"1st Normal Form"},{"location":"Year1/Database%20design/Normal%20Form/#2nd-normal-form","text":"First Check that data is in 1NF Remove any partial dependancies A partial dependancy is where one or more of the attributes depends on part of the primary key This can occur if the primary key is a composite key Fix any many-to-many relationships A database cannot have many to many relationships If there is a many to many realtionship it shoud be changed to a one-to-many then a many-to-one table So for out 2nd Normal form we would split this into multiple different tables that all link with each other Employee ID First Name Last Name Job Title Project 1 Sam Smith Rookie Bravo 2 Mick Mann Corporal Charlie 3 Adam Artic Sergeant Alpha Job Title Salary Rookie 26000 Corporal 33000 Sergeant 40000 Project Project Start Date Project End Date Manager Alpha 03/04/2016 04/03/2029 Cl Jess Hawke Bravo 01/02/2022 01/02/2023 Lt Alex Jones Charlie 02/01/2021 02/01/2024 Lt Alex Jones This is now second normal form as there is now not a composite key and there is not a many to many realtionship","title":"2nd Normal Form"},{"location":"Year1/Database%20design/Normal%20Form/#3rd-normal-form","text":"First check that data is already in 2NF Check there are no \"key dependancies\" A non-key dependancy exists where the value of an attribute is determined by a factor that is not part of a key In this example we can tell that the manager is not fully dependant on the Project and can be different therefore Manager can be a table Employee ID First Name Last Name Job Title Project 1 Sam Smith Rookie Bravo 2 Mick Mann Corporal Charlie 3 Adam Artic Sergeant Alpha Job Title Salary Rookie 26000 Corporal 33000 Sergeant 40000 Project Project Start Date Project End Date Manager Alpha 03/04/2016 04/03/2029 2 Bravo 01/02/2022 01/02/2023 1 Charlie 02/01/2021 02/01/2024 1 Manager ID Manager 1 Lt Alex Jones 2 Cl Jess Hawke","title":"3rd Normal Form"},{"location":"Year1/Networking/CPU/","text":"CPU Common CPU components Input Unit Central Processing Unit (CPU) a) Control Unit (CU) b) Arithmetic Logic Unit (ALU) c) Internal Memory (Registry and Cache) Memory Unit Output Unit ALU, Control Unit and Registers ALU The ALU is the part of the CPU that can perform arithmetic and logic operation onto binary numbers. An ALU has three parallel data buses, this consists of 2 inputs opperand (A and B) and the third which is the resulting output (A basic form of this is like a logic gate) CU The CU controls the operation of the processor. It obtains the instructions from the memory, interprets them, and directs the operation of the computer. It is responsible for controlling the transfer of data and instructions among other units of a computer It communicates with Input/Output devices for transfer of data or results from storage. It does not process or store data. Registers Registers are small amounts of high-speed memory contained within the CPU. They are used by the processor to store small amounts of data that are needed during processing, such as: The address of the next instruction to be executed The current instruction being decoded The result of calculations Some examples of Registers are P rogram C ounter ( PC ), I nstruction R egister ( IR ), M emory A ddress R egister ( MAR ), M emory D ata R egister ( MDR ) CPU speed Clock Speed A 'CPU clock cycle' is a synchronised pulse through the computer. During each cycle/pulse, billions of transistors withing the processor will open and close. Sometimes, multiple instructions can be completed each clock cycle however at the same time sometimes an instruction can take multiple clock cycles. In general, a higher clock speed means a faster CPU. The clock speed measures the number of cycles your CPU executes per second, measured in GHz Cache Cache is a small amount of R andom A ccess M emory ( RAM ) that is built directly within the processor. As it is built directly into the processor this means that it is faster to access and therefore the data/instructions can be read and used more efficiently. As there is only a small amount it is used to hold data/instructions that are more likely to be used. This allows for faster processing as the processor does not need to wait for the data/instructions to be fetched from RAM. There are different levels of cache in a CPU: Level 1: Also named primary cache Is the fastest and is embedded in the Processor chip as CPU cache Has the least amount of storage Level 2: Also names secondary cache Can be embedded in the CPU or as a co-processor or a seperate chip Has a high-speed bus connecting the cahce and CPU so it does not get slowed down by traffic on the main system Level 3: Specialised memory to improve the performance of L1 and L2 cache Usually double the speed of DRAM With multi-core processors, each core can have dedicated L1 and L2 cache, but can share L3 cache If a L3 cache references an instruction, it is usually elevated to a higher level of cache Bus in CPU A bus is a high-speed connection to all internal and external components that consists of a network of wires. Buses are used to send control signals and data between the processor and other components. There are 3 types of buses: Address Bus Carries memory addresses from the processor to other components such as primary memory and input/output devices Data Bus Carries the actual data between the processor and other components Control Bus Carries control signals from the processor to other components. The control bus also carries the clock's pulses.","title":"CPU"},{"location":"Year1/Networking/CPU/#cpu","text":"","title":"CPU"},{"location":"Year1/Networking/CPU/#common-cpu-components","text":"Input Unit Central Processing Unit (CPU) a) Control Unit (CU) b) Arithmetic Logic Unit (ALU) c) Internal Memory (Registry and Cache) Memory Unit Output Unit","title":"Common CPU components"},{"location":"Year1/Networking/CPU/#alu-control-unit-and-registers","text":"","title":"ALU, Control Unit and Registers"},{"location":"Year1/Networking/CPU/#alu","text":"The ALU is the part of the CPU that can perform arithmetic and logic operation onto binary numbers. An ALU has three parallel data buses, this consists of 2 inputs opperand (A and B) and the third which is the resulting output (A basic form of this is like a logic gate)","title":"ALU"},{"location":"Year1/Networking/CPU/#cu","text":"The CU controls the operation of the processor. It obtains the instructions from the memory, interprets them, and directs the operation of the computer. It is responsible for controlling the transfer of data and instructions among other units of a computer It communicates with Input/Output devices for transfer of data or results from storage. It does not process or store data.","title":"CU"},{"location":"Year1/Networking/CPU/#registers","text":"Registers are small amounts of high-speed memory contained within the CPU. They are used by the processor to store small amounts of data that are needed during processing, such as: The address of the next instruction to be executed The current instruction being decoded The result of calculations Some examples of Registers are P rogram C ounter ( PC ), I nstruction R egister ( IR ), M emory A ddress R egister ( MAR ), M emory D ata R egister ( MDR )","title":"Registers"},{"location":"Year1/Networking/CPU/#cpu-speed","text":"","title":"CPU speed"},{"location":"Year1/Networking/CPU/#clock-speed","text":"A 'CPU clock cycle' is a synchronised pulse through the computer. During each cycle/pulse, billions of transistors withing the processor will open and close. Sometimes, multiple instructions can be completed each clock cycle however at the same time sometimes an instruction can take multiple clock cycles. In general, a higher clock speed means a faster CPU. The clock speed measures the number of cycles your CPU executes per second, measured in GHz","title":"Clock Speed"},{"location":"Year1/Networking/CPU/#cache","text":"Cache is a small amount of R andom A ccess M emory ( RAM ) that is built directly within the processor. As it is built directly into the processor this means that it is faster to access and therefore the data/instructions can be read and used more efficiently. As there is only a small amount it is used to hold data/instructions that are more likely to be used. This allows for faster processing as the processor does not need to wait for the data/instructions to be fetched from RAM. There are different levels of cache in a CPU: Level 1: Also named primary cache Is the fastest and is embedded in the Processor chip as CPU cache Has the least amount of storage Level 2: Also names secondary cache Can be embedded in the CPU or as a co-processor or a seperate chip Has a high-speed bus connecting the cahce and CPU so it does not get slowed down by traffic on the main system Level 3: Specialised memory to improve the performance of L1 and L2 cache Usually double the speed of DRAM With multi-core processors, each core can have dedicated L1 and L2 cache, but can share L3 cache If a L3 cache references an instruction, it is usually elevated to a higher level of cache","title":"Cache"},{"location":"Year1/Networking/CPU/#bus-in-cpu","text":"A bus is a high-speed connection to all internal and external components that consists of a network of wires. Buses are used to send control signals and data between the processor and other components. There are 3 types of buses: Address Bus Carries memory addresses from the processor to other components such as primary memory and input/output devices Data Bus Carries the actual data between the processor and other components Control Bus Carries control signals from the processor to other components. The control bus also carries the clock's pulses.","title":"Bus in CPU"},{"location":"Year1/Networking/Data%20Transmission/","text":"Data Transmission Factors that effect data transmission Electrical signals Conductivity aka type of wire Amount of data being sent down the wire Optical signals Uses a laser Do not use too powerful a laser as can damage Length of the cable Bends in the cable","title":"Data Transmission"},{"location":"Year1/Networking/Data%20Transmission/#data-transmission","text":"","title":"Data Transmission"},{"location":"Year1/Networking/Data%20Transmission/#factors-that-effect-data-transmission","text":"","title":"Factors that effect data transmission"},{"location":"Year1/Networking/Data%20Transmission/#electrical-signals","text":"Conductivity aka type of wire Amount of data being sent down the wire","title":"Electrical signals"},{"location":"Year1/Networking/Data%20Transmission/#optical-signals","text":"Uses a laser Do not use too powerful a laser as can damage Length of the cable Bends in the cable","title":"Optical signals"},{"location":"Year1/Networking/Network%20components/","text":"Network components Components The network infrastrucute contains three categories of hardware components: End Devices Network devices / Intermediate devices Network media Encapsulation Each message is encapsulated into a specific format, called a frame, that includes the source and destination addresses. An example of encapsulation is how a letter is put inside an envelope For communication on an IP network, the format is very specific and includes a source and destination address. Ethernet Frame On an Ethernet network, messages are put into a frame or Layer 2 protocol data units (PDUs) Jumbo frames are Ethernet frames with more than 1500 bytes of payload, the limit set by the IEEE 802.3 standard. Commonly, jumbo frames can carry up to 9000 bytes of payload. Jumbo frames can increase the efficiency of Ethernet and network processing in hosts by reducing the protocol overhead. However an issue with Jumbo frames is that the data could get interrupted easier or corrupted which means the jumbo frame might have to be resent which takes longer. Sending data For a device to communicate on a network a physical address and logical address are needed for a device to communicate on an Ethernet network. A physical address (Also named a MAC address) does not change A logical address (IP address) can changed and is commonly assigned by a network administrator. 2 parts: network and host End Device Addressing To physically connect to a network, an end-user device must have a N etwork I nterface C ard ( NIC ) Some configuration of the OS so that the device can participate in the network. There are three parts to the IP configuration which must be correct for the device to send and receive information on the network. IP address This identifies the host on a network Subnet masks This is used to identify the network on which the host is connected Default gateway This identifies the networking device Broadcast Domain A broadcast message is used to contact every device on a local network. An Ethernet broadcast is all 1s in the destination MAC address - FFFF.FFFF.FFFF A broadcast domain is the area through which a broadcast message can travel. Each local Ethernet is a broadcast domain, Routers are used to divide the network into multiple broadcast domains. Access Layer Communication In order to send information from a device that is on an Ethernet network, the device must ssupply its own source MAC address, a destination MAC address, its own source IP address, as well as a destination IP address. The A dress R esolution P rotocol ( ARP ) is used to discover the MAC address of a device on the same local network. ARP ARP uses 3 steps to discover and store the MAC address of a host on the local network when only the IPv4 address of that host is known. The sending host creates and sends a frame addressed to a broadcast MAC address. Contained in the frae is a message with the IPv4 address of the intended destination host Each host on the network recieves the broadcast frame and compares the IPv4 address contained in the message with its own IPv4 address. The host with the matching IPv4 address sends its own MAC address back to the original sending host. The sending host receives the message and stores the MAC address and the IPv4 address in an ARP table. Dividing the Local Network Broadcast Containment Routers in the distribution layer can limit broadcasts to the local network where they need to be heard. Although broadcasts are necessary, too many hosts connected on the same local network can generate excessive broadcast traffic and slow down the network. Security It also can separate and protect certain groups of computers where confidential information resides. Routers can also hide the addresses of internal computers from the outside world to help prevent attacks, and control who can get into or out of the local network. Location Routers in the distribution layer canbe used to interconnect local networks at various loxations of an organisation that are geographically seperated Logical grouping Routers in the distribution layer can be used to logically group users, such as departments within a company, who have common needs or for access to resources. Routing Routing Path Selection Each router interface connects to a different network. A routing table contains information for how to reach local and remote networks The destination IP address is used and compared with the networks in the routing table to determine the interface to forward the packet out of. Routers do not forward broadcast messages Packet forwarding The destination MAC address is used to forward the packet to either the router if the destination IP address is for a different network or a specific network device on the local network. The ARP table shows a mapping of IP address to MAC address Routing Table Entries A routing table contains network addresses and the best path to reach a network Two ways routes can be added to a routing table are: Dynamically learned from other routers Manually entered by a network Admin A default route is the router interface used when forwarding packets to a destination that is not in the routing table. If a packet is destined for a network that is not in the routing table and no default route exits, the packet will be dropped. The Default Gateway When a host sends a message to a device on the same network, it forwards the message directly and uses ARP to discover the MAC address. When a host sends a message to a device on a remote network, the hosts uses the MAC address of the router as the destination, but still has the IP address of the remote host as the Layer 3 destination. It is very important that each host has the correct default gateway that is the IP address of the router on the same network. Local and Remote Network Segments Advantages of a single local segment: Appropriate for simpler networks Less complexity and lower network cost Allows devices to be \"seen\" by other devices Faster data transfer - more direct communication Ease of device access Disadvantages of a single local segment: All hosts are in one broadcast domain which causes more traffic on the segment and may slow network performance Harder to implement QoS Harder to implement security Advantages of having hosts on a remote segment More appropriate for larger, more complex networks Splits up broadcast domains and decreases traffic Can improve performance on each segment Makes the machines invisible to those on other local network segments Can provide increased security Can improve network organization Disadvantages of having hosts on a remote segment Requires the use of routing (distribution layer) Router can slow traffic between segments More complexity and expense (requires a router) Benefits of a Hierarchical Design A hierarchical, layered design provides: Increased efficiency Optimization of function Increased speed A way in which to scale the network without impacting the performance of existing ones Three layers: Access Layer - This layer provides connections to hosts in a local Ethernet network. Distribution Layer - This layer interconnects the smaller local networks. Core Layer - This layer provides a high-speed connection between distribution layer devices. The MAC Address Table A switch builds a MAC address table by examining a frame as it comes into the switch. A switch adds the source MAC address of the device connected to the port through which the frame came in on. A switch forwards a frame out to a specific port when the destination MAC address is in the MAC address table. A switch forwards a frame out to all hosts (except the sending host) when the destination MAC address is not in the MAC address table. Standard Network Switch A standard switch receive a broadcast message from any port will send the broadcast to all other ports. Devices attached to same switch can communicate with each other. Switch stacking can provide more ports for connection (up to 300+). Virtual LAN Virtual LANS is a technology that allows you to split a network into segments using switches. A VLAN capable switch is possible to restrict broadcasts and to control which devices can communicate with each other. A Switch which supports VLANs will also include the VLAN ID (1-1005, extend up to 4094) for each entry of the MAC Address Table. Any switch port which is not explicitly assigned a VLAN number, resides in the default VLAN. Which for most vendors corresponds to VLAN 1. Traffic arriving on a switch port assigned to one VLAN will only ever be forwarded out another switch port that belongs to the same VLAN \u2013 a switch will never allow traffic to cross a VLAN boundary. Again, each VLAN operates as if it were a completely separate physical switch. Each connected switch port in the topology above is a member of only a single VLAN (an Access port). In order to extend a VLAN to the second switch, a connection is made between one Access port on both switches for each VLAN. There is a mechanism which allows a single switch port to carry traffic from multiple VLANs (a Trunk port). A tag(802.1Q) is added to the sending frames to indicate to the other end what VLAN that frame belongs to. Native trunk port What will happen if an untagged frame somehow gets into the trunk link? Without the tag, the switch will not know what VLAN the traffic belongs to, therefore the switch associates the untagged traffic with what is configured as the Native VLAN. Essentially, the Native VLAN is the VLAN that any received untagged traffic gets assigned to on a Trunk port. Native VLAN is configured per trunk port, it is locally significant and it tells the switch - \"if you receive an untagged data into this port, forward it like it is part of the native VLAN number\". By default, the native VLAN of all trunk ports on switches is assigned to VLAN 1 but it can be any valid VLAN number. The switches are not only putting the received untagged data into the native VLAN, but they are also sending the data in the Native VLAN untagged. VLAN20 is the Native VLAN of the trunk port. All control plane messages such as CDP, VTP, and DTP are also sent through the Native VLAN i.e untagged.","title":"Network components"},{"location":"Year1/Networking/Network%20components/#network-components","text":"","title":"Network components"},{"location":"Year1/Networking/Network%20components/#components","text":"The network infrastrucute contains three categories of hardware components: End Devices Network devices / Intermediate devices Network media","title":"Components"},{"location":"Year1/Networking/Network%20components/#encapsulation","text":"Each message is encapsulated into a specific format, called a frame, that includes the source and destination addresses. An example of encapsulation is how a letter is put inside an envelope For communication on an IP network, the format is very specific and includes a source and destination address.","title":"Encapsulation"},{"location":"Year1/Networking/Network%20components/#ethernet-frame","text":"On an Ethernet network, messages are put into a frame or Layer 2 protocol data units (PDUs) Jumbo frames are Ethernet frames with more than 1500 bytes of payload, the limit set by the IEEE 802.3 standard. Commonly, jumbo frames can carry up to 9000 bytes of payload. Jumbo frames can increase the efficiency of Ethernet and network processing in hosts by reducing the protocol overhead. However an issue with Jumbo frames is that the data could get interrupted easier or corrupted which means the jumbo frame might have to be resent which takes longer.","title":"Ethernet Frame"},{"location":"Year1/Networking/Network%20components/#sending-data","text":"For a device to communicate on a network a physical address and logical address are needed for a device to communicate on an Ethernet network. A physical address (Also named a MAC address) does not change A logical address (IP address) can changed and is commonly assigned by a network administrator. 2 parts: network and host","title":"Sending data"},{"location":"Year1/Networking/Network%20components/#end-device-addressing","text":"To physically connect to a network, an end-user device must have a N etwork I nterface C ard ( NIC ) Some configuration of the OS so that the device can participate in the network. There are three parts to the IP configuration which must be correct for the device to send and receive information on the network. IP address This identifies the host on a network Subnet masks This is used to identify the network on which the host is connected Default gateway This identifies the networking device","title":"End Device Addressing"},{"location":"Year1/Networking/Network%20components/#broadcast-domain","text":"A broadcast message is used to contact every device on a local network. An Ethernet broadcast is all 1s in the destination MAC address - FFFF.FFFF.FFFF A broadcast domain is the area through which a broadcast message can travel. Each local Ethernet is a broadcast domain, Routers are used to divide the network into multiple broadcast domains.","title":"Broadcast Domain"},{"location":"Year1/Networking/Network%20components/#access-layer-communication","text":"In order to send information from a device that is on an Ethernet network, the device must ssupply its own source MAC address, a destination MAC address, its own source IP address, as well as a destination IP address. The A dress R esolution P rotocol ( ARP ) is used to discover the MAC address of a device on the same local network.","title":"Access Layer Communication"},{"location":"Year1/Networking/Network%20components/#arp","text":"ARP uses 3 steps to discover and store the MAC address of a host on the local network when only the IPv4 address of that host is known. The sending host creates and sends a frame addressed to a broadcast MAC address. Contained in the frae is a message with the IPv4 address of the intended destination host Each host on the network recieves the broadcast frame and compares the IPv4 address contained in the message with its own IPv4 address. The host with the matching IPv4 address sends its own MAC address back to the original sending host. The sending host receives the message and stores the MAC address and the IPv4 address in an ARP table.","title":"ARP"},{"location":"Year1/Networking/Network%20components/#dividing-the-local-network","text":"","title":"Dividing the Local Network"},{"location":"Year1/Networking/Network%20components/#broadcast-containment","text":"Routers in the distribution layer can limit broadcasts to the local network where they need to be heard. Although broadcasts are necessary, too many hosts connected on the same local network can generate excessive broadcast traffic and slow down the network.","title":"Broadcast Containment"},{"location":"Year1/Networking/Network%20components/#security","text":"It also can separate and protect certain groups of computers where confidential information resides. Routers can also hide the addresses of internal computers from the outside world to help prevent attacks, and control who can get into or out of the local network.","title":"Security"},{"location":"Year1/Networking/Network%20components/#location","text":"Routers in the distribution layer canbe used to interconnect local networks at various loxations of an organisation that are geographically seperated","title":"Location"},{"location":"Year1/Networking/Network%20components/#logical-grouping","text":"Routers in the distribution layer can be used to logically group users, such as departments within a company, who have common needs or for access to resources.","title":"Logical grouping"},{"location":"Year1/Networking/Network%20components/#routing","text":"","title":"Routing"},{"location":"Year1/Networking/Network%20components/#routing-path-selection","text":"Each router interface connects to a different network. A routing table contains information for how to reach local and remote networks The destination IP address is used and compared with the networks in the routing table to determine the interface to forward the packet out of. Routers do not forward broadcast messages","title":"Routing Path Selection"},{"location":"Year1/Networking/Network%20components/#packet-forwarding","text":"The destination MAC address is used to forward the packet to either the router if the destination IP address is for a different network or a specific network device on the local network. The ARP table shows a mapping of IP address to MAC address","title":"Packet forwarding"},{"location":"Year1/Networking/Network%20components/#routing-table-entries","text":"A routing table contains network addresses and the best path to reach a network Two ways routes can be added to a routing table are: Dynamically learned from other routers Manually entered by a network Admin A default route is the router interface used when forwarding packets to a destination that is not in the routing table. If a packet is destined for a network that is not in the routing table and no default route exits, the packet will be dropped.","title":"Routing Table Entries"},{"location":"Year1/Networking/Network%20components/#the-default-gateway","text":"When a host sends a message to a device on the same network, it forwards the message directly and uses ARP to discover the MAC address. When a host sends a message to a device on a remote network, the hosts uses the MAC address of the router as the destination, but still has the IP address of the remote host as the Layer 3 destination. It is very important that each host has the correct default gateway that is the IP address of the router on the same network.","title":"The Default Gateway"},{"location":"Year1/Networking/Network%20components/#local-and-remote-network-segments","text":"","title":"Local and Remote Network Segments"},{"location":"Year1/Networking/Network%20components/#advantages-of-a-single-local-segment","text":"Appropriate for simpler networks Less complexity and lower network cost Allows devices to be \"seen\" by other devices Faster data transfer - more direct communication Ease of device access","title":"Advantages of a single local segment:"},{"location":"Year1/Networking/Network%20components/#disadvantages-of-a-single-local-segment","text":"All hosts are in one broadcast domain which causes more traffic on the segment and may slow network performance Harder to implement QoS Harder to implement security","title":"Disadvantages of a single local segment:"},{"location":"Year1/Networking/Network%20components/#advantages-of-having-hosts-on-a-remote-segment","text":"More appropriate for larger, more complex networks Splits up broadcast domains and decreases traffic Can improve performance on each segment Makes the machines invisible to those on other local network segments Can provide increased security Can improve network organization","title":"Advantages of having hosts on a remote segment"},{"location":"Year1/Networking/Network%20components/#disadvantages-of-having-hosts-on-a-remote-segment","text":"Requires the use of routing (distribution layer) Router can slow traffic between segments More complexity and expense (requires a router)","title":"Disadvantages of having hosts on a remote segment"},{"location":"Year1/Networking/Network%20components/#benefits-of-a-hierarchical-design","text":"A hierarchical, layered design provides: Increased efficiency Optimization of function Increased speed A way in which to scale the network without impacting the performance of existing ones Three layers: Access Layer - This layer provides connections to hosts in a local Ethernet network. Distribution Layer - This layer interconnects the smaller local networks. Core Layer - This layer provides a high-speed connection between distribution layer devices.","title":"Benefits of a Hierarchical Design"},{"location":"Year1/Networking/Network%20components/#the-mac-address-table","text":"A switch builds a MAC address table by examining a frame as it comes into the switch. A switch adds the source MAC address of the device connected to the port through which the frame came in on. A switch forwards a frame out to a specific port when the destination MAC address is in the MAC address table. A switch forwards a frame out to all hosts (except the sending host) when the destination MAC address is not in the MAC address table.","title":"The MAC Address Table"},{"location":"Year1/Networking/Network%20components/#standard-network-switch","text":"A standard switch receive a broadcast message from any port will send the broadcast to all other ports. Devices attached to same switch can communicate with each other. Switch stacking can provide more ports for connection (up to 300+).","title":"Standard Network Switch"},{"location":"Year1/Networking/Network%20components/#virtual-lan","text":"Virtual LANS is a technology that allows you to split a network into segments using switches. A VLAN capable switch is possible to restrict broadcasts and to control which devices can communicate with each other. A Switch which supports VLANs will also include the VLAN ID (1-1005, extend up to 4094) for each entry of the MAC Address Table. Any switch port which is not explicitly assigned a VLAN number, resides in the default VLAN. Which for most vendors corresponds to VLAN 1. Traffic arriving on a switch port assigned to one VLAN will only ever be forwarded out another switch port that belongs to the same VLAN \u2013 a switch will never allow traffic to cross a VLAN boundary. Again, each VLAN operates as if it were a completely separate physical switch. Each connected switch port in the topology above is a member of only a single VLAN (an Access port). In order to extend a VLAN to the second switch, a connection is made between one Access port on both switches for each VLAN. There is a mechanism which allows a single switch port to carry traffic from multiple VLANs (a Trunk port). A tag(802.1Q) is added to the sending frames to indicate to the other end what VLAN that frame belongs to.","title":"Virtual LAN"},{"location":"Year1/Networking/Network%20components/#native-trunk-port","text":"What will happen if an untagged frame somehow gets into the trunk link? Without the tag, the switch will not know what VLAN the traffic belongs to, therefore the switch associates the untagged traffic with what is configured as the Native VLAN. Essentially, the Native VLAN is the VLAN that any received untagged traffic gets assigned to on a Trunk port. Native VLAN is configured per trunk port, it is locally significant and it tells the switch - \"if you receive an untagged data into this port, forward it like it is part of the native VLAN number\". By default, the native VLAN of all trunk ports on switches is assigned to VLAN 1 but it can be any valid VLAN number. The switches are not only putting the received untagged data into the native VLAN, but they are also sending the data in the Native VLAN untagged. VLAN20 is the Native VLAN of the trunk port. All control plane messages such as CDP, VTP, and DTP are also sent through the Native VLAN i.e untagged.","title":"Native trunk port"},{"location":"Year1/Software%20Dev/Pseudocode/","text":"Pseudocode Pseudocode is code that is written in the english langauge using easy to read notation that does not follow many syntax rules as usual programming langauges. This allows programs to be easier to code. Pseudocode is used to to help plan out an algorithm/program in plain English, this means it can be understood regardless of what langauge it is intended to be built in. This helps with reusability, as we can easily understand Pseudocode, whereas we may not understand the algorithm when built in a langauge we do not recognise Pseudocode also helps plan out the program developement, as we can map out how we want the program to function before we develop it. This can help show project stakeholders how the intended solution will work. Pseudocode rules One Statement per line Capitalised Key words Use indentation to use hierarchy Use and END statement to symbolise the end of a multi-line structure Keep your statements in English, minimise syntax Pseudocode Syntax Input and output To get input you use INPUT such as: Input first name AS varFirstName To output you would use OUTPUT such as: OUTPUT varFirstName Control Statements If statements For If statements as said earlier we have to use ENDIF at the end and use caps For example 1 2 3 4 5 6 7 IF Age >= 10 THEN SET status to \"Child\" ELSE IF Age == 20 THEN SET status to \"Adult\" ELSE THEN SET status to \"unsure\" ENDIF Switch Case Switch work similar to standard c++ but written a little nicer and can be used in one statement For example 1 2 3 4 5 6 7 CASE OF Answer 'A' : OUTPUT \"Wrong\" 'B' : OUTPUT \"Correct\" 'C' : OUTPUT \"Wrong\" 'D' : OUTPUT \"Wrong\" OTHER : OUTPUT \"Invalid Option\" ENDCASE Iteration Statements There are many forms of iteration through pseudocode These are examples are here: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* Do Statement */ DO Age = Age + 1 UNTIL Age >= 15 /* DO WHILE statement */ DO WHILE Age <= 15 Age = Age + 1 END WHILE /* FOR loop */ FOR A IN 1 To 5 OUTPUT A END FOR Functions and Procedures When using functions and procedures it could be useful to include the main, this is the bit of a program that is ran when the code starts, it should be after all the functions and procedures it relies on as it cannot call funtions and procedures after it as they would not have been compiled or interpreted. To show what the main part of a program is we would use: 1 2 3 4 PROGRAM START ( MAIN ) INPUT Number1 OUTPUT Number1 END PROGRAM And then for functions and procedures we will just use FUNCTION and PROCUDURE and then the END versions of them. If you are giving parameters to a function or procedure you must first include \"PASS VARIABLES\" before the paramters to show that they are being passed. For example: 1 2 3 4 5 PROCEDURE outputNums ( PASS VARIABLES num1 , num2 , num3 ) OUTPUT \"First Number: \" + num1 OUTPUT \"Second Number: \" + num2 OUTPUT \"SUM: \" + num3 ENDPROCEDURE 1 2 3 4 FUNCTION sumNums ( PASS VARIABLES num1 , num2 ) varNums = num1 + num2 RETURN varNUMS ENDFUNCTION Examples of code Multiplication of 2 numbers Example An For this pseudocode we should: - Input 2 numbers - Mulitply the 2 numbers together - Output the number This would look like this: 1 2 3 4 5 6 OUTPUT \"Enter number 1\" INPUT first number AS varNum1 OUTPUT \"Enter number 2\" INPUT second number AS varNum2 OUPUT varNum1 multiplied by varNum2 Check if input is a specific value In this example we should: - Takes a users number input - Output to tell the user if their value is not a 5 or a 6 This would look like: 1 2 3 4 5 OUTPUT \"Enter a number: \" INPUT number AS varNumber IF varNumber is NOT equal to 5 OR varNumber is NOT equal to 6 OUTPUT \"That number is not a 5 or a 6\" ENDIF Colour selecter This code example will: - Ask a user to enter a number - If the number is between 0 and 10 - Write Blue - If the number is between 10 and 20 - Write the word Red - If the number is between 20 and 30 - Write the word Green - If there is another number - Write that it is not a correct colour option 1 2 3 4 5 6 7 8 9 10 11 12 13 OUTPUT \"Please enter a number: \" INPUT number AS varNumber IF varNumber >= 0 AND varNumber < 10 SET varOutput AS \"Blue\" ELSE IF varNumber >= 10 AND varNumber < 20 SET varOutput AS \"Red\" ELSE IF varNumber >= than 20 AND <= 30 SET varOutput AS \"Green\" ELSE SET varOutput AS \"That is not a correct colour option\" ENDIF OUTPUT varOutput Multiples of 5 between 1 and 100 So for this example we will make pseudocode that will print all multiples of 5 between 1 and 100 (including both 1 and 100) using MOD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 SET varNum AS 1 DO varNum is equal to varNum + 1 IF varNum MOD 5 is equal to 0 OUPTUT varNum ENDIF UNTIL varNum is equal to 101 /* Note --> There are multiple ways to do this for example with a While or a for loop Or if you did not have to use MOD you could just keep adding up in 5 s However using MOD this is 1 of the many ways you can do this */ Count multiples of 2 In this example we will count all even numbers up to a user defined stopping point The code should use either a function or procedure to gather the user input, and to count and output all the even numbers 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 FUNCTION getNumber () OUTPUT \"Please enter a stopping point: \" INPUT number AS varStopPoint RETURN number ENDFUNCTION PROCEDURE outputEvenNumbers () FOR i IN 2 to varStopPoint IF i MOD 2 == 0 OUTPUT i ENDIF ENDFOR ENDPROCEDURE PROGRAM START ( MAIN ) SET varStopPoint AS CALL getNumber () CALL outputEvenNumbers ( varStopPoint ) ENDPROGRAM","title":"Pseudocode"},{"location":"Year1/Software%20Dev/Pseudocode/#pseudocode","text":"Pseudocode is code that is written in the english langauge using easy to read notation that does not follow many syntax rules as usual programming langauges. This allows programs to be easier to code. Pseudocode is used to to help plan out an algorithm/program in plain English, this means it can be understood regardless of what langauge it is intended to be built in. This helps with reusability, as we can easily understand Pseudocode, whereas we may not understand the algorithm when built in a langauge we do not recognise Pseudocode also helps plan out the program developement, as we can map out how we want the program to function before we develop it. This can help show project stakeholders how the intended solution will work.","title":"Pseudocode"},{"location":"Year1/Software%20Dev/Pseudocode/#pseudocode-rules","text":"One Statement per line Capitalised Key words Use indentation to use hierarchy Use and END statement to symbolise the end of a multi-line structure Keep your statements in English, minimise syntax","title":"Pseudocode rules"},{"location":"Year1/Software%20Dev/Pseudocode/#pseudocode-syntax","text":"","title":"Pseudocode Syntax"},{"location":"Year1/Software%20Dev/Pseudocode/#input-and-output","text":"To get input you use INPUT such as: Input first name AS varFirstName To output you would use OUTPUT such as: OUTPUT varFirstName","title":"Input and output"},{"location":"Year1/Software%20Dev/Pseudocode/#control-statements","text":"","title":"Control Statements"},{"location":"Year1/Software%20Dev/Pseudocode/#if-statements","text":"For If statements as said earlier we have to use ENDIF at the end and use caps For example 1 2 3 4 5 6 7 IF Age >= 10 THEN SET status to \"Child\" ELSE IF Age == 20 THEN SET status to \"Adult\" ELSE THEN SET status to \"unsure\" ENDIF","title":"If statements"},{"location":"Year1/Software%20Dev/Pseudocode/#switch-case","text":"Switch work similar to standard c++ but written a little nicer and can be used in one statement For example 1 2 3 4 5 6 7 CASE OF Answer 'A' : OUTPUT \"Wrong\" 'B' : OUTPUT \"Correct\" 'C' : OUTPUT \"Wrong\" 'D' : OUTPUT \"Wrong\" OTHER : OUTPUT \"Invalid Option\" ENDCASE","title":"Switch Case"},{"location":"Year1/Software%20Dev/Pseudocode/#iteration-statements","text":"There are many forms of iteration through pseudocode These are examples are here: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* Do Statement */ DO Age = Age + 1 UNTIL Age >= 15 /* DO WHILE statement */ DO WHILE Age <= 15 Age = Age + 1 END WHILE /* FOR loop */ FOR A IN 1 To 5 OUTPUT A END FOR","title":"Iteration Statements"},{"location":"Year1/Software%20Dev/Pseudocode/#functions-and-procedures","text":"When using functions and procedures it could be useful to include the main, this is the bit of a program that is ran when the code starts, it should be after all the functions and procedures it relies on as it cannot call funtions and procedures after it as they would not have been compiled or interpreted. To show what the main part of a program is we would use: 1 2 3 4 PROGRAM START ( MAIN ) INPUT Number1 OUTPUT Number1 END PROGRAM And then for functions and procedures we will just use FUNCTION and PROCUDURE and then the END versions of them. If you are giving parameters to a function or procedure you must first include \"PASS VARIABLES\" before the paramters to show that they are being passed. For example: 1 2 3 4 5 PROCEDURE outputNums ( PASS VARIABLES num1 , num2 , num3 ) OUTPUT \"First Number: \" + num1 OUTPUT \"Second Number: \" + num2 OUTPUT \"SUM: \" + num3 ENDPROCEDURE 1 2 3 4 FUNCTION sumNums ( PASS VARIABLES num1 , num2 ) varNums = num1 + num2 RETURN varNUMS ENDFUNCTION","title":"Functions and Procedures"},{"location":"Year1/Software%20Dev/Pseudocode/#examples-of-code","text":"","title":"Examples of code"},{"location":"Year1/Software%20Dev/Pseudocode/#multiplication-of-2-numbers-example","text":"An For this pseudocode we should: - Input 2 numbers - Mulitply the 2 numbers together - Output the number This would look like this: 1 2 3 4 5 6 OUTPUT \"Enter number 1\" INPUT first number AS varNum1 OUTPUT \"Enter number 2\" INPUT second number AS varNum2 OUPUT varNum1 multiplied by varNum2","title":"Multiplication of 2 numbers Example"},{"location":"Year1/Software%20Dev/Pseudocode/#check-if-input-is-a-specific-value","text":"In this example we should: - Takes a users number input - Output to tell the user if their value is not a 5 or a 6 This would look like: 1 2 3 4 5 OUTPUT \"Enter a number: \" INPUT number AS varNumber IF varNumber is NOT equal to 5 OR varNumber is NOT equal to 6 OUTPUT \"That number is not a 5 or a 6\" ENDIF","title":"Check if input is a specific value"},{"location":"Year1/Software%20Dev/Pseudocode/#colour-selecter","text":"This code example will: - Ask a user to enter a number - If the number is between 0 and 10 - Write Blue - If the number is between 10 and 20 - Write the word Red - If the number is between 20 and 30 - Write the word Green - If there is another number - Write that it is not a correct colour option 1 2 3 4 5 6 7 8 9 10 11 12 13 OUTPUT \"Please enter a number: \" INPUT number AS varNumber IF varNumber >= 0 AND varNumber < 10 SET varOutput AS \"Blue\" ELSE IF varNumber >= 10 AND varNumber < 20 SET varOutput AS \"Red\" ELSE IF varNumber >= than 20 AND <= 30 SET varOutput AS \"Green\" ELSE SET varOutput AS \"That is not a correct colour option\" ENDIF OUTPUT varOutput","title":"Colour selecter"},{"location":"Year1/Software%20Dev/Pseudocode/#multiples-of-5-between-1-and-100","text":"So for this example we will make pseudocode that will print all multiples of 5 between 1 and 100 (including both 1 and 100) using MOD 1 2 3 4 5 6 7 8 9 10 11 12 13 14 SET varNum AS 1 DO varNum is equal to varNum + 1 IF varNum MOD 5 is equal to 0 OUPTUT varNum ENDIF UNTIL varNum is equal to 101 /* Note --> There are multiple ways to do this for example with a While or a for loop Or if you did not have to use MOD you could just keep adding up in 5 s However using MOD this is 1 of the many ways you can do this */","title":"Multiples of 5 between 1 and 100"},{"location":"Year1/Software%20Dev/Pseudocode/#count-multiples-of-2","text":"In this example we will count all even numbers up to a user defined stopping point The code should use either a function or procedure to gather the user input, and to count and output all the even numbers 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 FUNCTION getNumber () OUTPUT \"Please enter a stopping point: \" INPUT number AS varStopPoint RETURN number ENDFUNCTION PROCEDURE outputEvenNumbers () FOR i IN 2 to varStopPoint IF i MOD 2 == 0 OUTPUT i ENDIF ENDFOR ENDPROCEDURE PROGRAM START ( MAIN ) SET varStopPoint AS CALL getNumber () CALL outputEvenNumbers ( varStopPoint ) ENDPROGRAM","title":"Count multiples of 2"},{"location":"Year1/Web%20development/Languages/","text":"Langages to learn for UNI C++ C# MySQL / SQL PHP HTML CSS Javascript (Node.js) - This also exists might not be needed","title":"Langages to learn for UNI"},{"location":"Year1/Web%20development/Languages/#langages-to-learn-for-uni","text":"C++ C# MySQL / SQL PHP HTML CSS Javascript (Node.js) - This also exists might not be needed","title":"Langages to learn for UNI"},{"location":"blog/","text":"","title":"Index"},{"location":"blog/posts/firstPost/","text":"Public Release Lilith notes will now be released today however more feautures will be realease with time When these are released more blog posts will come :)","title":"Public Release"},{"location":"blog/posts/firstPost/#public-release","text":"Lilith notes will now be released today however more feautures will be realease with time When these are released more blog posts will come :)","title":"Public Release"},{"location":"blog/posts/hello-world/","text":"Hello world! ...","title":"Hello world!"},{"location":"blog/posts/hello-world/#hello-world","text":"...","title":"Hello world!"}]}